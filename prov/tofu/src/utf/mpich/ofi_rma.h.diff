diff --git a/src/mpid/ch4/netmod/ofi/ofi_rma.h b/src/mpid/ch4/netmod/ofi/ofi_rma.h
index ec6231f..e6432b1 100644
--- a/src/mpid/ch4/netmod/ofi/ofi_rma.h
+++ b/src/mpid/ch4/netmod/ofi/ofi_rma.h
@@ -422,6 +422,21 @@ static inline int MPIDI_OFI_do_put(const void *origin_addr,
 
     if (origin_contig && target_contig && (origin_bytes <= MPIDI_OFI_global.max_buffered_write)) {
         MPIDI_OFI_win_cntr_incr(win);
+#define TOFU
+#ifdef TOFU
+        MPIDI_OFI_CALL_RETRY(fi_inject_write(MPIDI_OFI_WIN(win).ep,
+                                             (char *) origin_addr + origin_true_lb, target_bytes,
+                                             MPIDI_OFI_av_to_phys(addr),
+                                             (uint64_t) MPIDI_OFI_winfo_base(win, target_rank)
+                                             + target_disp * MPIDI_OFI_winfo_disp_unit(win,
+                                                                                       target_rank)
+                                             + target_true_lb,
+                                             MPIDI_OFI_winfo_mr_key(win, target_rank)
+                                             + target_disp * MPIDI_OFI_winfo_disp_unit(win,
+                                                                                       target_rank)
+                                             + target_true_lb),
+                             rdma_inject_write, FALSE);
+#else
         MPIDI_OFI_CALL_RETRY(fi_inject_write(MPIDI_OFI_WIN(win).ep,
                                              (char *) origin_addr + origin_true_lb, target_bytes,
                                              MPIDI_OFI_av_to_phys(addr),
@@ -431,6 +446,7 @@ static inline int MPIDI_OFI_do_put(const void *origin_addr,
                                              + target_true_lb, MPIDI_OFI_winfo_mr_key(win,
                                                                                       target_rank)),
                              rdma_inject_write, FALSE);
+#endif /* TOFU */
         goto null_op_exit;
     } else if (origin_contig && target_contig) {
         MPIDI_OFI_INIT_SIGNAL_REQUEST(win, sigreq, &flags);
@@ -447,7 +463,13 @@ static inline int MPIDI_OFI_do_put(const void *origin_addr,
         iov.iov_len = target_bytes;
         riov.addr = (uint64_t) (MPIDI_OFI_winfo_base(win, target_rank) + offset + target_true_lb);
         riov.len = target_bytes;
+#ifdef TOFU
+        riov.key = MPIDI_OFI_winfo_mr_key(win, target_rank)
+            + (riov.addr - (MPIDI_OFI_winfo_base(win, target_rank)));
+        fprintf(stderr, "YIRMA:%d riov.key(%lx) key(%lx) riov.addr(%lx) base(%lx)\n", __LINE__, riov.key, riov.addr, MPIDI_OFI_winfo_mr_key(win, target_rank), (MPIDI_OFI_winfo_base(win, target_rank)));
+#else
         riov.key = MPIDI_OFI_winfo_mr_key(win, target_rank);
+#endif
         MPIDI_OFI_INIT_CHUNK_CONTEXT(win, sigreq);
         MPIDI_OFI_CALL_RETRY(fi_writemsg(MPIDI_OFI_WIN(win).ep, &msg, flags), rdma_write, FALSE);
         goto fn_exit;
@@ -492,8 +514,18 @@ static inline int MPIDI_OFI_do_put(const void *origin_addr,
 
         cur_o += oout;
         cur_t += tout;
+#ifdef TOFU
+        for (i = 0; i < tout; i++) {
+            targetv[i].key = MPIDI_OFI_winfo_mr_key(win, target_rank)
+                + (targetv[i].addr - MPIDI_OFI_winfo_base(win, target_rank));
+            fprintf(stderr, "YIRMA:%d targetv[%d].key(%lx) key(%lx) targetv[%d].addr(%lx) base(%lx)\n",
+                    __LINE__, i, targetv[i].key, MPIDI_OFI_winfo_mr_key(win, target_rank), i, targetv[i].addr,
+                    MPIDI_OFI_winfo_base(win, target_rank));
+        }
+#else
         for (i = 0; i < tout; i++)
             targetv[i].key = MPIDI_OFI_winfo_mr_key(win, target_rank);
+#endif
         MPIR_Assert(rc != MPIDI_OFI_SEG_ERROR);
         MPIDI_OFI_ASSERT_IOVEC_ALIGN(originv);
         msg.msg_iov = originv;
@@ -621,7 +653,13 @@ static inline int MPIDI_OFI_do_get(void *origin_addr,
         iov.iov_len = target_bytes;
         riov.addr = (uint64_t) (MPIDI_OFI_winfo_base(win, target_rank) + offset + target_true_lb);
         riov.len = target_bytes;
+#ifdef TOFU
+        riov.key = MPIDI_OFI_winfo_mr_key(win, target_rank)
+            + (riov.addr - (MPIDI_OFI_winfo_base(win, target_rank)));
+        fprintf(stderr, "YIRMA:%d riov.key(%lx) key(%lx) riov.addr(%lx) base(%lx)\n", __LINE__, riov.key, riov.addr, MPIDI_OFI_winfo_mr_key(win, target_rank), (MPIDI_OFI_winfo_base(win, target_rank)));
+#else
         riov.key = MPIDI_OFI_winfo_mr_key(win, target_rank);
+#endif
         MPIDI_OFI_INIT_CHUNK_CONTEXT(win, sigreq);
         MPIDI_OFI_CALL_RETRY(fi_readmsg(MPIDI_OFI_WIN(win).ep, &msg, flags), rdma_write, FALSE);
         goto fn_exit;
@@ -668,8 +706,18 @@ static inline int MPIDI_OFI_do_get(void *origin_addr,
         cur_t += tout;
         MPIR_Assert(rc != MPIDI_OFI_SEG_ERROR);
 
+#ifdef TOFU
+        for (i = 0; i < tout; i++) {
+            targetv[i].key = MPIDI_OFI_winfo_mr_key(win, target_rank)
+                + (targetv[i].addr - MPIDI_OFI_winfo_base(win, target_rank));
+            fprintf(stderr, "YIRMA:%d targetv[%d].key(%lx) key(%lx) targetv[%d].addr(%lx) base(%lx)\n",
+                    __LINE__, i, targetv[i].key, MPIDI_OFI_winfo_mr_key(win, target_rank), i, targetv[i].addr,
+                    MPIDI_OFI_winfo_base(win, target_rank));
+        }
+#else
         for (i = 0; i < tout; i++)
             targetv[i].key = MPIDI_OFI_winfo_mr_key(win, target_rank);
+#endif
 
         MPIDI_OFI_ASSERT_IOVEC_ALIGN(originv);
         msg.msg_iov = originv;
